import argparse
import os

from aiogram import Router, F
from aiogram.types import Message
from dotenv import load_dotenv

from bot.keyboards import main_keyboard
from bot.api.api_client import get_mentors

start_router = Router()


load_dotenv()


parser = argparse.ArgumentParser(description="Start Telegram Bot with specified URL")
parser.add_argument('--url', required=True, help="Specify the URL (TEST_URL for test, PROD_URL for production)")
args = parser.parse_args()

BASE_URL = os.getenv(args.url)


def fetch_data(api_func, error_message):
    data = api_func(BASE_URL)
    if not data:
        raise ValueError(error_message)
    return data


@start_router.message(F.text == "/start")
async def start_handler(message: Message):
    username = message.from_user.username
    chat_id = message.chat.id

    try:
        mentors_data = fetch_data(get_mentors, "üö® –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É.\nüîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
    except ValueError as e:
        await message.answer(str(e))
        return

    mentors_list = mentors_data.get("mentors", [])

    mentor = next((m for m in mentors_list if m["tg_chat_id"] == chat_id), None)

    if mentor:
        text = (
            f'üéâ –ü—Ä–∏–≤–µ—Ç, –ú–µ–Ω—Ç–æ—Ä {mentor["name"]["first"]}! üéâ\n\n'
            '–≠—Ç–æ –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –º–µ–Ω—Ç–æ—Ä—É ‚ù§Ô∏è\n\n'
            '‚ú® –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–¢–ü–†–ê–í–ò–¢–¨ –û–¢–ö–†–´–¢–ö–£" —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è! ‚ú®'
        )
        keyboard = main_keyboard
    else:
        text = (
            f'üéâ –ü—Ä–∏–≤–µ—Ç, –£—á–µ–Ω–∏–∫ {username}! üéâ\n\n'
            '–≠—Ç–æ –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –º–µ–Ω—Ç–æ—Ä—É ‚ù§Ô∏è\n\n'
            '‚ú® –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–¢–ü–†–ê–í–ò–¢–¨ –û–¢–ö–†–´–¢–ö–£" —á—Ç–æ–±—ã –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å —Å–≤–æ–µ–≥–æ –º–µ–Ω—Ç–æ—Ä–∞! ‚ú®'
        )
        keyboard = main_keyboard

    await message.answer(text, reply_markup=keyboard)
